{"ast":null,"code":"import axios from \"axios\";\n\n// Création de l'instance axios avec configuration de base\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5000\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  },\n  timeout: 10000 // 10 secondes de timeout\n});\n\n// Log de configuration pour débogage\nconsole.log(\"Configuration API:\", {\n  baseURL: api.defaults.baseURL,\n  headers: api.defaults.headers\n});\n\n// Intercepteur pour ajouter le token aux requêtes\napi.interceptors.request.use(config => {\n  // Log de la requête pour débogage\n  console.log(`Requête ${config.method.toUpperCase()} vers ${config.url}`);\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers[\"Authorization\"] = `Bearer ${token}`;\n    console.log(\"Token ajouté aux headers\");\n  }\n\n  // S'assurer que le Content-Type est toujours défini pour les requêtes POST\n  if (config.method === \"post\" && !config.headers[\"Content-Type\"]) {\n    config.headers[\"Content-Type\"] = \"application/json\";\n    console.log(\"Content-Type ajouté: application/json\");\n  }\n\n  // Log pour voir les données envoyées\n  if (config.data) {\n    console.log(\"Données envoyées:\", config.data);\n  }\n  return config;\n}, error => {\n  console.error(\"Erreur dans l'intercepteur de requête:\", error);\n  return Promise.reject(error);\n});\n\n// Intercepteur pour gérer les erreurs d'authentification\napi.interceptors.response.use(response => {\n  console.log(`Réponse de ${response.config.url} avec statut ${response.status}`);\n  return response;\n}, error => {\n  console.error(\"Erreur API:\", error.message);\n  if (error.response) {\n    console.error(\"Détails de l'erreur:\", {\n      status: error.response.status,\n      statusText: error.response.statusText,\n      data: error.response.data\n    });\n    if (error.response.status === 401) {\n      // Token expiré ou invalide\n      console.log(\"Erreur 401: Authentification requise - Déconnexion\");\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"admin\");\n      window.location.href = \"/login\";\n    }\n  } else if (error.request) {\n    console.error(\"Pas de réponse reçue:\", error.request);\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","Accept","timeout","console","log","defaults","interceptors","request","use","config","method","toUpperCase","url","token","localStorage","getItem","data","error","Promise","reject","response","status","message","statusText","removeItem","window","location","href"],"sources":["C:/Users/savit/Documents/cryptoE6/cryptoe6/Frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Création de l'instance axios avec configuration de base\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5000\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    Accept: \"application/json\",\r\n  },\r\n  timeout: 10000, // 10 secondes de timeout\r\n});\r\n\r\n// Log de configuration pour débogage\r\nconsole.log(\"Configuration API:\", {\r\n  baseURL: api.defaults.baseURL,\r\n  headers: api.defaults.headers,\r\n});\r\n\r\n// Intercepteur pour ajouter le token aux requêtes\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Log de la requête pour débogage\r\n    console.log(`Requête ${config.method.toUpperCase()} vers ${config.url}`);\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n      console.log(\"Token ajouté aux headers\");\r\n    }\r\n\r\n    // S'assurer que le Content-Type est toujours défini pour les requêtes POST\r\n    if (config.method === \"post\" && !config.headers[\"Content-Type\"]) {\r\n      config.headers[\"Content-Type\"] = \"application/json\";\r\n      console.log(\"Content-Type ajouté: application/json\");\r\n    }\r\n\r\n    // Log pour voir les données envoyées\r\n    if (config.data) {\r\n      console.log(\"Données envoyées:\", config.data);\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error(\"Erreur dans l'intercepteur de requête:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Intercepteur pour gérer les erreurs d'authentification\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(\r\n      `Réponse de ${response.config.url} avec statut ${response.status}`\r\n    );\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error(\"Erreur API:\", error.message);\r\n\r\n    if (error.response) {\r\n      console.error(\"Détails de l'erreur:\", {\r\n        status: error.response.status,\r\n        statusText: error.response.statusText,\r\n        data: error.response.data,\r\n      });\r\n\r\n      if (error.response.status === 401) {\r\n        // Token expiré ou invalide\r\n        console.log(\"Erreur 401: Authentification requise - Déconnexion\");\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"admin\");\r\n        window.location.href = \"/login\";\r\n      }\r\n    } else if (error.request) {\r\n      console.error(\"Pas de réponse reçue:\", error.request);\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}